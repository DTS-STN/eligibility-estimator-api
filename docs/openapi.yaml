openapi: 3.0.3
info:
  title: Eligibility Estimator API
  version: '1.0'
  description: "Calculates eligibility given a certain set of parameters."

servers:
  - url: https://eligibilityestimatorapi.azurewebsites.net/api
    description: 'Main production site'
  - url: http://localhost:7071/api
    description: 'Local developer environment'

paths:
  /CalculateEligibility:
    get:
      summary: "Calculate Eligibility"
      description: "Calculates eligibility for all benefits given a certain set of parameters."
      tags:
        - Calculation Requests
      parameters:
        - $ref: '#/components/parameters/age'
        - $ref: '#/components/parameters/livingCountry'
        - $ref: '#/components/parameters/legalStatus'
        - $ref: '#/components/parameters/yearsInCanadaSince18'
        - $ref: '#/components/parameters/maritalStatus'
        - $ref: '#/components/parameters/partnerReceivingOas'
        - $ref: '#/components/parameters/income'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'

components:
  schemas:
    Country:
      type: string
      description: A valid country.
      format: country

    ResultOptions:
      type: string
      description: A summary of the resulting eligibility calculation
      format: string
      enum:
        - Eligible!
        - Eligible when 65.
        - Ineligible!
        - Conditionally eligible...
        - Need more information...
        - Request is invalid!

    ResultReasons:
      type: string
      description: The reason for the provided outcome
      format: string
      enum:
        - You meet the criteria
        - Not yet 65
        - Not enough years in Canada
        - Not a Canadian citizen
        - Not in a country with a social agreement
        - Need more information...
        - Not eligible for OAS
        - Income too high
        - Entered data is invalid

    ResultObject:
      type: object
      description: "The calculated result for a given benefit"
      properties:
        result:
          $ref: '#/components/schemas/ResultOptions'
        reason:
          $ref: '#/components/schemas/ResultReasons'
        detail:
          type: string

    ResponseObject:
      type: object
      description: 'The overall eligibility results'
      properties:
        oas:
          $ref: '#/components/schemas/ResultObject'
        gis:
          $ref: '#/components/schemas/ResultObject'

    ErrorResponseObject:
      type: object
      description: 'Error details for the failed request'
      properties:
        error:
          type: string
        detail:
          type: string

  responses:
    '200':
      description: "Successful request and response"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseObject'

    '400':
      description: "Invalid request"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponseObject'

  parameters:
    age:
      name: age
      in: query
      description: The current age of the user.
      required: true
      example: 65
      schema:
        type: number
        description: Age, up to a max of 150.
        format: integer
        maximum: 150
      allowEmptyValue: false

    livingCountry:
      name: livingCountry
      in: query
      description: The country that the user is currently living in.
      required: false
      example: Canada
      allowEmptyValue: false
      schema:
        $ref: '#/components/schemas/Country'

    birthCountry:
      name: birthCountry
      in: query
      description: The country that the user was born in.
      required: false
      example: Canada
      allowEmptyValue: false
      schema:
        $ref: '#/components/schemas/Country'

    legalStatus:
      name: legalStatus
      in: query
      description: The current legal status of the user.
      required: false
      example: 'Canadian Citizen'
      schema:
        type: string
        enum:
          - Canadian Citizen
          - Permanent Resident
          - Status Indian
          - Temporary Resident
          - None of the above
        description: The current legal status of the user.
        format: legalStatus
      allowEmptyValue: false

    yearsInCanadaSince18:
      name: yearsInCanadaSince18
      in: query
      description: How many years the user has lived in Canada since the age of 18.
      required: false
      example: 40
      schema:
        type: number
        description: Years, up to a max of 100.
        format: integer
        maximum: 100
      allowEmptyValue: false

    maritalStatus:
      name: maritalStatus
      in: query
      description: The current marital status of the user.
      required: false
      example: 'Single'
      schema:
        type: string
        enum:
        - Single
        - Married
        - Common-law
        - Widowed
        - Divorced
        - Seperated
        description: The current marital status of the user.
        format: maritalStatus
      allowEmptyValue: false

    partnerReceivingOas:
      name: partnerReceivingOas
      in: query
      description: Is the user's partner receiving OAS?
      required: false
      example: true
      schema:
        type: boolean
      allowEmptyValue: false

    income:
      name: income
      in: query
      description: The user's current (combined, if applicable) net income.
      required: false
      example: 40000
      schema:
        type: number
        description: Income.
        format: integer
      allowEmptyValue: false
